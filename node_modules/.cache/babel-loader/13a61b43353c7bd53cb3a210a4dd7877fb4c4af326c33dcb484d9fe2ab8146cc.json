{"ast":null,"code":"import { ADD_ONE, APPLY_NUMBER, CHANGE_OPERATION } from './../actions';\nexport const initialState = {\n  total: 5,\n  operation: \"+\",\n  memory: 5\n};\nconst calculateResult = (num1, num2, operation) => {\n  switch (operation) {\n    case \"+\":\n      return num1 + num2;\n    case \"*\":\n      return num1 * num2;\n    case \"-\":\n      return num1 - num2;\n    default:\n      return;\n  }\n};\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case ADD_ONE:\n      return {\n        ...state,\n        total: state.total + 1\n      };\n    case APPLY_NUMBER:\n      return {\n        ...state,\n        total: calculateResult(state.total, action.payload, state.operation)\n      };\n    case CHANGE_OPERATION:\n      return {\n        ...state,\n        operation: action.payload\n      };\n    case CLEAR_DISPLAY:\n      return {\n        ...state,\n        total: action.payload\n      };\n    default:\n      return state;\n  }\n};\nexport default reducer;","map":{"version":3,"names":["ADD_ONE","APPLY_NUMBER","CHANGE_OPERATION","initialState","total","operation","memory","calculateResult","num1","num2","reducer","state","action","type","payload","CLEAR_DISPLAY"],"sources":["/Users/yasarmuslu/WorkinTech/S10/Projeler/fsweb-s10g1-reducer-calculator/src/reducers/index.js"],"sourcesContent":["import { ADD_ONE, APPLY_NUMBER, CHANGE_OPERATION } from './../actions';\n\nexport const initialState = {\n  total: 5,\n  operation: \"+\",\n  memory: 5,\n}\n\nconst calculateResult = (num1, num2, operation) => {\n  switch (operation) {\n    case (\"+\"):\n      return num1 + num2;\n    case (\"*\"):\n      return num1 * num2;\n    case (\"-\"):\n      return num1 - num2;\n    default:\n      return;\n  }\n}\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case (ADD_ONE):\n      return ({\n        ...state,\n        total: state.total + 1\n      });\n\n    case (APPLY_NUMBER):\n      return ({\n        ...state,\n        total: calculateResult(state.total, action.payload, state.operation)\n      });\n\n    case (CHANGE_OPERATION):\n      return ({\n        ...state,\n        operation: action.payload\n      });\n\n      case (CLEAR_DISPLAY):\n      return ({\n        ...state,\n        total: action.payload\n      });\n\n\n    default:\n      return state;\n  }\n}\n\nexport default reducer;"],"mappings":"AAAA,SAASA,OAAO,EAAEC,YAAY,EAAEC,gBAAgB,QAAQ,cAAc;AAEtE,OAAO,MAAMC,YAAY,GAAG;EAC1BC,KAAK,EAAE,CAAC;EACRC,SAAS,EAAE,GAAG;EACdC,MAAM,EAAE;AACV,CAAC;AAED,MAAMC,eAAe,GAAGA,CAACC,IAAI,EAAEC,IAAI,EAAEJ,SAAS,KAAK;EACjD,QAAQA,SAAS;IACf,KAAM,GAAG;MACP,OAAOG,IAAI,GAAGC,IAAI;IACpB,KAAM,GAAG;MACP,OAAOD,IAAI,GAAGC,IAAI;IACpB,KAAM,GAAG;MACP,OAAOD,IAAI,GAAGC,IAAI;IACpB;MACE;EACJ;AACF,CAAC;AAED,MAAMC,OAAO,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EACjC,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAMb,OAAO;MACX,OAAQ;QACN,GAAGW,KAAK;QACRP,KAAK,EAAEO,KAAK,CAACP,KAAK,GAAG;MACvB,CAAC;IAEH,KAAMH,YAAY;MAChB,OAAQ;QACN,GAAGU,KAAK;QACRP,KAAK,EAAEG,eAAe,CAACI,KAAK,CAACP,KAAK,EAAEQ,MAAM,CAACE,OAAO,EAAEH,KAAK,CAACN,SAAS;MACrE,CAAC;IAEH,KAAMH,gBAAgB;MACpB,OAAQ;QACN,GAAGS,KAAK;QACRN,SAAS,EAAEO,MAAM,CAACE;MACpB,CAAC;IAED,KAAMC,aAAa;MACnB,OAAQ;QACN,GAAGJ,KAAK;QACRP,KAAK,EAAEQ,MAAM,CAACE;MAChB,CAAC;IAGH;MACE,OAAOH,KAAK;EAChB;AACF,CAAC;AAED,eAAeD,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}